name: Rust CI

on:
  pull_request:
    branches: [main, development]

jobs:
  prepare:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: prepare
      - run: cargo install sqlx-cli --no-default-features --features postgres
      - run: sqlx migrate run
      - run: cargo sqlx prepare
      - uses: actions/cache@v4
        with:
          path: .sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('Cargo.toml', 'Cargo.lock', 'src/**/*.rs', 'migrations/**/*.sql') }}

  lint:
    runs-on: ubuntu-latest
    needs: prepare
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: lint
      - uses: actions/cache/restore@v4
        with:
          path: .sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('Cargo.toml', 'Cargo.lock', 'src/**/*.rs', 'migrations/**/*.sql') }}
      - run: cargo fmt --check
      - run: cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs: prepare
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: test
      - uses: actions/cache/restore@v4
        with:
          path: .sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('Cargo.toml', 'Cargo.lock', 'src/**/*.rs', 'migrations/**/*.sql') }}
      - run: cargo install sqlx-cli --no-default-features --features postgres
      - run: sqlx migrate run
      - run: cargo test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: build
      - uses: actions/cache/restore@v4
        with:
          path: .sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('Cargo.toml', 'Cargo.lock', 'src/**/*.rs', 'migrations/**/*.sql') }}
      - run: cargo build --release
      - uses: actions/upload-artifact@v4
        with:
          name: jos
          path: target/release/